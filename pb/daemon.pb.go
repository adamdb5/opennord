// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: pb/daemon.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TechnologyEnum int32

const (
	TechnologyEnum_UNKNOWN_TECHNOLOGY TechnologyEnum = 0
	TechnologyEnum_OPENVPN            TechnologyEnum = 1
	TechnologyEnum_NORDLYNX           TechnologyEnum = 2 // SKYLARK = 3; Exists in codebase, but is not implemented
)

// Enum value maps for TechnologyEnum.
var (
	TechnologyEnum_name = map[int32]string{
		0: "UNKNOWN_TECHNOLOGY",
		1: "OPENVPN",
		2: "NORDLYNX",
	}
	TechnologyEnum_value = map[string]int32{
		"UNKNOWN_TECHNOLOGY": 0,
		"OPENVPN":            1,
		"NORDLYNX":           2,
	}
)

func (x TechnologyEnum) Enum() *TechnologyEnum {
	p := new(TechnologyEnum)
	*p = x
	return p
}

func (x TechnologyEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TechnologyEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_daemon_proto_enumTypes[0].Descriptor()
}

func (TechnologyEnum) Type() protoreflect.EnumType {
	return &file_pb_daemon_proto_enumTypes[0]
}

func (x TechnologyEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TechnologyEnum.Descriptor instead.
func (TechnologyEnum) EnumDescriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{0}
}

type ProtocolEnum int32

const (
	ProtocolEnum_UNKNOWN_PROTOCOL ProtocolEnum = 0
	ProtocolEnum_UDP              ProtocolEnum = 1
	ProtocolEnum_TCP              ProtocolEnum = 2
)

// Enum value maps for ProtocolEnum.
var (
	ProtocolEnum_name = map[int32]string{
		0: "UNKNOWN_PROTOCOL",
		1: "UDP",
		2: "TCP",
	}
	ProtocolEnum_value = map[string]int32{
		"UNKNOWN_PROTOCOL": 0,
		"UDP":              1,
		"TCP":              2,
	}
)

func (x ProtocolEnum) Enum() *ProtocolEnum {
	p := new(ProtocolEnum)
	*p = x
	return p
}

func (x ProtocolEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtocolEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_daemon_proto_enumTypes[1].Descriptor()
}

func (ProtocolEnum) Type() protoreflect.EnumType {
	return &file_pb_daemon_proto_enumTypes[1]
}

func (x ProtocolEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtocolEnum.Descriptor instead.
func (ProtocolEnum) EnumDescriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{1}
}

type AccountTypeEnum int32

const (
	AccountTypeEnum_ACTIVE   AccountTypeEnum = 0
	AccountTypeEnum_INACTIVE AccountTypeEnum = 1
)

// Enum value maps for AccountTypeEnum.
var (
	AccountTypeEnum_name = map[int32]string{
		0: "ACTIVE",
		1: "INACTIVE",
	}
	AccountTypeEnum_value = map[string]int32{
		"ACTIVE":   0,
		"INACTIVE": 1,
	}
)

func (x AccountTypeEnum) Enum() *AccountTypeEnum {
	p := new(AccountTypeEnum)
	*p = x
	return p
}

func (x AccountTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_daemon_proto_enumTypes[2].Descriptor()
}

func (AccountTypeEnum) Type() protoreflect.EnumType {
	return &file_pb_daemon_proto_enumTypes[2]
}

func (x AccountTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountTypeEnum.Descriptor instead.
func (AccountTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{2}
}

type ProtocolsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      int32    `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Protocols []string `protobuf:"bytes,2,rep,name=protocols,proto3" json:"protocols,omitempty"`
}

func (x *ProtocolsResponse) Reset() {
	*x = ProtocolsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtocolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtocolsResponse) ProtoMessage() {}

func (x *ProtocolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtocolsResponse.ProtoReflect.Descriptor instead.
func (*ProtocolsResponse) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{0}
}

func (x *ProtocolsResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ProtocolsResponse) GetProtocols() []string {
	if x != nil {
		return x.Protocols
	}
	return nil
}

type TechnologyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         int32    `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Technologies []string `protobuf:"bytes,2,rep,name=technologies,proto3" json:"technologies,omitempty"`
}

func (x *TechnologyResponse) Reset() {
	*x = TechnologyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TechnologyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnologyResponse) ProtoMessage() {}

func (x *TechnologyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TechnologyResponse.ProtoReflect.Descriptor instead.
func (*TechnologyResponse) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{1}
}

func (x *TechnologyResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TechnologyResponse) GetTechnologies() []string {
	if x != nil {
		return x.Technologies
	}
	return nil
}

type AccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      AccountTypeEnum `protobuf:"varint,1,opt,name=type,proto3,enum=pb.AccountTypeEnum" json:"type,omitempty"`
	Username  string          `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"` // Unused
	Email     string          `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	ExpiresAt string          `protobuf:"bytes,4,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
}

func (x *AccountResponse) Reset() {
	*x = AccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountResponse) ProtoMessage() {}

func (x *AccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountResponse.ProtoReflect.Descriptor instead.
func (*AccountResponse) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{2}
}

func (x *AccountResponse) GetType() AccountTypeEnum {
	if x != nil {
		return x.Type
	}
	return AccountTypeEnum_ACTIVE
}

func (x *AccountResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AccountResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AccountResponse) GetExpiresAt() string {
	if x != nil {
		return x.ExpiresAt
	}
	return ""
}

type CitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol  ProtocolEnum `protobuf:"varint,1,opt,name=protocol,proto3,enum=pb.ProtocolEnum" json:"protocol,omitempty"`
	Obfuscate bool         `protobuf:"varint,2,opt,name=obfuscate,proto3" json:"obfuscate,omitempty"`
	Country   string       `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *CitiesRequest) Reset() {
	*x = CitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CitiesRequest) ProtoMessage() {}

func (x *CitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CitiesRequest.ProtoReflect.Descriptor instead.
func (*CitiesRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{3}
}

func (x *CitiesRequest) GetProtocol() ProtocolEnum {
	if x != nil {
		return x.Protocol
	}
	return ProtocolEnum_UNKNOWN_PROTOCOL
}

func (x *CitiesRequest) GetObfuscate() bool {
	if x != nil {
		return x.Obfuscate
	}
	return false
}

func (x *CitiesRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type CitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  int32    `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Names []string `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *CitiesResponse) Reset() {
	*x = CitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CitiesResponse) ProtoMessage() {}

func (x *CitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CitiesResponse.ProtoReflect.Descriptor instead.
func (*CitiesResponse) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{4}
}

func (x *CitiesResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CitiesResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type ConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type uint32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Data []string `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{5}
}

func (x *ConnectResponse) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ConnectResponse) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

type CountriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol  ProtocolEnum `protobuf:"varint,1,opt,name=protocol,proto3,enum=pb.ProtocolEnum" json:"protocol,omitempty"`
	Obfuscate bool         `protobuf:"varint,2,opt,name=obfuscate,proto3" json:"obfuscate,omitempty"`
}

func (x *CountriesRequest) Reset() {
	*x = CountriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountriesRequest) ProtoMessage() {}

func (x *CountriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountriesRequest.ProtoReflect.Descriptor instead.
func (*CountriesRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{6}
}

func (x *CountriesRequest) GetProtocol() ProtocolEnum {
	if x != nil {
		return x.Protocol
	}
	return ProtocolEnum_UNKNOWN_PROTOCOL
}

func (x *CountriesRequest) GetObfuscate() bool {
	if x != nil {
		return x.Obfuscate
	}
	return false
}

type CountriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  int32    `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Names []string `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *CountriesResponse) Reset() {
	*x = CountriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountriesResponse) ProtoMessage() {}

func (x *CountriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountriesResponse.ProtoReflect.Descriptor instead.
func (*CountriesResponse) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{7}
}

func (x *CountriesResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CountriesResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type FrontendCountry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *FrontendCountry) Reset() {
	*x = FrontendCountry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendCountry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendCountry) ProtoMessage() {}

func (x *FrontendCountry) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendCountry.ProtoReflect.Descriptor instead.
func (*FrontendCountry) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{8}
}

func (x *FrontendCountry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FrontendCountry) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type FrontendCountriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Countries []*FrontendCountry `protobuf:"bytes,1,rep,name=countries,proto3" json:"countries,omitempty"`
}

func (x *FrontendCountriesResponse) Reset() {
	*x = FrontendCountriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendCountriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendCountriesResponse) ProtoMessage() {}

func (x *FrontendCountriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendCountriesResponse.ProtoReflect.Descriptor instead.
func (*FrontendCountriesResponse) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{9}
}

func (x *FrontendCountriesResponse) GetCountries() []*FrontendCountry {
	if x != nil {
		return x.Countries
	}
	return nil
}

type IsLoggedInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLoggedIn bool `protobuf:"varint,1,opt,name=isLoggedIn,proto3" json:"isLoggedIn,omitempty"`
}

func (x *IsLoggedInResponse) Reset() {
	*x = IsLoggedInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsLoggedInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsLoggedInResponse) ProtoMessage() {}

func (x *IsLoggedInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsLoggedInResponse.ProtoReflect.Descriptor instead.
func (*IsLoggedInResponse) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{10}
}

func (x *IsLoggedInResponse) GetIsLoggedIn() bool {
	if x != nil {
		return x.IsLoggedIn
	}
	return false
}

type Bool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Bool) Reset() {
	*x = Bool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bool) ProtoMessage() {}

func (x *Bool) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bool.ProtoReflect.Descriptor instead.
func (*Bool) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{11}
}

func (x *Bool) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32    `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Data []string `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *Payload) Reset() {
	*x = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{12}
}

func (x *Payload) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Payload) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

type Whitelist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ports   *Ports   `protobuf:"bytes,1,opt,name=ports,proto3" json:"ports,omitempty"`
	Subnets []string `protobuf:"bytes,2,rep,name=subnets,proto3" json:"subnets,omitempty"`
}

func (x *Whitelist) Reset() {
	*x = Whitelist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Whitelist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Whitelist) ProtoMessage() {}

func (x *Whitelist) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Whitelist.ProtoReflect.Descriptor instead.
func (*Whitelist) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{13}
}

func (x *Whitelist) GetPorts() *Ports {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Whitelist) GetSubnets() []string {
	if x != nil {
		return x.Subnets
	}
	return nil
}

type Ports struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Udp []int32 `protobuf:"varint,1,rep,packed,name=udp,proto3" json:"udp,omitempty"`
	Tcp []int32 `protobuf:"varint,2,rep,packed,name=tcp,proto3" json:"tcp,omitempty"`
}

func (x *Ports) Reset() {
	*x = Ports{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ports) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ports) ProtoMessage() {}

func (x *Ports) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ports.ProtoReflect.Descriptor instead.
func (*Ports) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{14}
}

func (x *Ports) GetUdp() []int32 {
	if x != nil {
		return x.Udp
	}
	return nil
}

func (x *Ports) GetTcp() []int32 {
	if x != nil {
		return x.Tcp
	}
	return nil
}

type ConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerTag          string `protobuf:"bytes,1,opt,name=serverTag,proto3" json:"serverTag,omitempty"`
	Protocol           string `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Obfuscate          bool   `protobuf:"varint,3,opt,name=obfuscate,proto3" json:"obfuscate,omitempty"`
	CyberSec           bool   `protobuf:"varint,4,opt,name=cyberSec,proto3" json:"cyberSec,omitempty"`
	KillSwitch         bool   `protobuf:"varint,5,opt,name=killSwitch,proto3" json:"killSwitch,omitempty"`
	Dns                bool   `protobuf:"varint,6,opt,name=dns,proto3" json:"dns,omitempty"`
	WhiteList          bool   `protobuf:"varint,7,opt,name=whiteList,proto3" json:"whiteList,omitempty"`
	ServerGroup        bool   `protobuf:"varint,8,opt,name=serverGroup,proto3" json:"serverGroup,omitempty"`
	NordLynxPrivateKey string `protobuf:"bytes,9,opt,name=nordLynxPrivateKey,proto3" json:"nordLynxPrivateKey,omitempty"`
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{15}
}

func (x *ConnectRequest) GetServerTag() string {
	if x != nil {
		return x.ServerTag
	}
	return ""
}

func (x *ConnectRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ConnectRequest) GetObfuscate() bool {
	if x != nil {
		return x.Obfuscate
	}
	return false
}

func (x *ConnectRequest) GetCyberSec() bool {
	if x != nil {
		return x.CyberSec
	}
	return false
}

func (x *ConnectRequest) GetKillSwitch() bool {
	if x != nil {
		return x.KillSwitch
	}
	return false
}

func (x *ConnectRequest) GetDns() bool {
	if x != nil {
		return x.Dns
	}
	return false
}

func (x *ConnectRequest) GetWhiteList() bool {
	if x != nil {
		return x.WhiteList
	}
	return false
}

func (x *ConnectRequest) GetServerGroup() bool {
	if x != nil {
		return x.ServerGroup
	}
	return false
}

func (x *ConnectRequest) GetNordLynxPrivateKey() string {
	if x != nil {
		return x.NordLynxPrivateKey
	}
	return ""
}

type Country struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Country) Reset() {
	*x = Country{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Country) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Country) ProtoMessage() {}

func (x *Country) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Country.ProtoReflect.Descriptor instead.
func (*Country) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{16}
}

func (x *Country) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Country) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ServersListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol  string `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Count     int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	ServerTag string `protobuf:"bytes,3,opt,name=serverTag,proto3" json:"serverTag,omitempty"`
}

func (x *ServersListRequest) Reset() {
	*x = ServersListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServersListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServersListRequest) ProtoMessage() {}

func (x *ServersListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServersListRequest.ProtoReflect.Descriptor instead.
func (*ServersListRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{17}
}

func (x *ServersListRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ServersListRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ServersListRequest) GetServerTag() string {
	if x != nil {
		return x.ServerTag
	}
	return ""
}

type DisconnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DisconnectRequest) Reset() {
	*x = DisconnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectRequest) ProtoMessage() {}

func (x *DisconnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectRequest.ProtoReflect.Descriptor instead.
func (*DisconnectRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{18}
}

func (x *DisconnectRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol  ProtocolEnum `protobuf:"varint,1,opt,name=protocol,proto3,enum=pb.ProtocolEnum" json:"protocol,omitempty"`
	Obfuscate bool         `protobuf:"varint,2,opt,name=obfuscate,proto3" json:"obfuscate,omitempty"`
}

func (x *GroupsRequest) Reset() {
	*x = GroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsRequest) ProtoMessage() {}

func (x *GroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsRequest.ProtoReflect.Descriptor instead.
func (*GroupsRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{19}
}

func (x *GroupsRequest) GetProtocol() ProtocolEnum {
	if x != nil {
		return x.Protocol
	}
	return ProtocolEnum_UNKNOWN_PROTOCOL
}

func (x *GroupsRequest) GetObfuscate() bool {
	if x != nil {
		return x.Obfuscate
	}
	return false
}

type GroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  int32    `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Names []string `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *GroupsResponse) Reset() {
	*x = GroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsResponse) ProtoMessage() {}

func (x *GroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsResponse.ProtoReflect.Descriptor instead.
func (*GroupsResponse) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{20}
}

func (x *GroupsResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GroupsResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{21}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginOAuth2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *LoginOAuth2Response) Reset() {
	*x = LoginOAuth2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginOAuth2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginOAuth2Response) ProtoMessage() {}

func (x *LoginOAuth2Response) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginOAuth2Response.ProtoReflect.Descriptor instead.
func (*LoginOAuth2Response) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{22}
}

func (x *LoginOAuth2Response) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type String struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *anypb.Any `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *String) Reset() {
	*x = String{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*String) ProtoMessage() {}

func (x *String) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use String.ProtoReflect.Descriptor instead.
func (*String) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{23}
}

func (x *String) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

type LogoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{24}
}

func (x *LogoutRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Plan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Cost        string `protobuf:"bytes,3,opt,name=cost,proto3" json:"cost,omitempty"`
	Currency    string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *Plan) Reset() {
	*x = Plan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Plan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plan) ProtoMessage() {}

func (x *Plan) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plan.ProtoReflect.Descriptor instead.
func (*Plan) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{25}
}

func (x *Plan) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Plan) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Plan) GetCost() string {
	if x != nil {
		return x.Cost
	}
	return ""
}

func (x *Plan) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type PlansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans []*Plan `protobuf:"bytes,2,rep,name=plans,proto3" json:"plans,omitempty"`
}

func (x *PlansResponse) Reset() {
	*x = PlansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlansResponse) ProtoMessage() {}

func (x *PlansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlansResponse.ProtoReflect.Descriptor instead.
func (*PlansResponse) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{26}
}

func (x *PlansResponse) GetPlans() []*Plan {
	if x != nil {
		return x.Plans
	}
	return nil
}

type RateConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rating int32 `protobuf:"varint,1,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *RateConnectionRequest) Reset() {
	*x = RateConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RateConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateConnectionRequest) ProtoMessage() {}

func (x *RateConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateConnectionRequest.ProtoReflect.Descriptor instead.
func (*RateConnectionRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{27}
}

func (x *RateConnectionRequest) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{28}
}

func (x *RegisterRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SetGenericRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *SetGenericRequest) Reset() {
	*x = SetGenericRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGenericRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGenericRequest) ProtoMessage() {}

func (x *SetGenericRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGenericRequest.ProtoReflect.Descriptor instead.
func (*SetGenericRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{29}
}

func (x *SetGenericRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type SetCyberSecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CyberSec bool `protobuf:"varint,2,opt,name=cyberSec,proto3" json:"cyberSec,omitempty"`
}

func (x *SetCyberSecRequest) Reset() {
	*x = SetCyberSecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCyberSecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCyberSecRequest) ProtoMessage() {}

func (x *SetCyberSecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCyberSecRequest.ProtoReflect.Descriptor instead.
func (*SetCyberSecRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{30}
}

func (x *SetCyberSecRequest) GetCyberSec() bool {
	if x != nil {
		return x.CyberSec
	}
	return false
}

type SetDNSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dns      []string `protobuf:"bytes,2,rep,name=dns,proto3" json:"dns,omitempty"`
	CyberSec bool     `protobuf:"varint,3,opt,name=cyberSec,proto3" json:"cyberSec,omitempty"`
}

func (x *SetDNSRequest) Reset() {
	*x = SetDNSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDNSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDNSRequest) ProtoMessage() {}

func (x *SetDNSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDNSRequest.ProtoReflect.Descriptor instead.
func (*SetDNSRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{31}
}

func (x *SetDNSRequest) GetDns() []string {
	if x != nil {
		return x.Dns
	}
	return nil
}

func (x *SetDNSRequest) GetCyberSec() bool {
	if x != nil {
		return x.CyberSec
	}
	return false
}

type SetKillSwitchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *SetKillSwitchRequest) Reset() {
	*x = SetKillSwitchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetKillSwitchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetKillSwitchRequest) ProtoMessage() {}

func (x *SetKillSwitchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetKillSwitchRequest.ProtoReflect.Descriptor instead.
func (*SetKillSwitchRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{32}
}

func (x *SetKillSwitchRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type SetNotifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    uint32 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Notify bool   `protobuf:"varint,3,opt,name=notify,proto3" json:"notify,omitempty"`
}

func (x *SetNotifyRequest) Reset() {
	*x = SetNotifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNotifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNotifyRequest) ProtoMessage() {}

func (x *SetNotifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNotifyRequest.ProtoReflect.Descriptor instead.
func (*SetNotifyRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{33}
}

func (x *SetNotifyRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SetNotifyRequest) GetNotify() bool {
	if x != nil {
		return x.Notify
	}
	return false
}

type SetProtocolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol ProtocolEnum `protobuf:"varint,2,opt,name=protocol,proto3,enum=pb.ProtocolEnum" json:"protocol,omitempty"`
}

func (x *SetProtocolRequest) Reset() {
	*x = SetProtocolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProtocolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProtocolRequest) ProtoMessage() {}

func (x *SetProtocolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProtocolRequest.ProtoReflect.Descriptor instead.
func (*SetProtocolRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{34}
}

func (x *SetProtocolRequest) GetProtocol() ProtocolEnum {
	if x != nil {
		return x.Protocol
	}
	return ProtocolEnum_UNKNOWN_PROTOCOL
}

type SetTechnologyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Technology TechnologyEnum `protobuf:"varint,2,opt,name=technology,proto3,enum=pb.TechnologyEnum" json:"technology,omitempty"`
}

func (x *SetTechnologyRequest) Reset() {
	*x = SetTechnologyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTechnologyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTechnologyRequest) ProtoMessage() {}

func (x *SetTechnologyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTechnologyRequest.ProtoReflect.Descriptor instead.
func (*SetTechnologyRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{35}
}

func (x *SetTechnologyRequest) GetTechnology() TechnologyEnum {
	if x != nil {
		return x.Technology
	}
	return TechnologyEnum_UNKNOWN_TECHNOLOGY
}

type SetWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Whitelist *Whitelist `protobuf:"bytes,2,opt,name=whitelist,proto3" json:"whitelist,omitempty"`
}

func (x *SetWhitelistRequest) Reset() {
	*x = SetWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWhitelistRequest) ProtoMessage() {}

func (x *SetWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWhitelistRequest.ProtoReflect.Descriptor instead.
func (*SetWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{36}
}

func (x *SetWhitelistRequest) GetWhitelist() *Whitelist {
	if x != nil {
		return x.Whitelist
	}
	return nil
}

type SettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Data string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SettingsResponse) Reset() {
	*x = SettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsResponse) ProtoMessage() {}

func (x *SettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsResponse.ProtoReflect.Descriptor instead.
func (*SettingsResponse) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{37}
}

func (x *SettingsResponse) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SettingsResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type Settings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Technology  string `protobuf:"bytes,1,opt,name=technology,proto3" json:"technology,omitempty"`
	Firewall    bool   `protobuf:"varint,2,opt,name=firewall,proto3" json:"firewall,omitempty"`
	KillSwitch  bool   `protobuf:"varint,3,opt,name=killSwitch,proto3" json:"killSwitch,omitempty"`
	AutoConnect bool   `protobuf:"varint,4,opt,name=autoConnect,proto3" json:"autoConnect,omitempty"`
	Notify      bool   `protobuf:"varint,5,opt,name=notify,proto3" json:"notify,omitempty"`
	Ipv6        bool   `protobuf:"varint,6,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
}

func (x *Settings) Reset() {
	*x = Settings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settings) ProtoMessage() {}

func (x *Settings) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settings.ProtoReflect.Descriptor instead.
func (*Settings) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{38}
}

func (x *Settings) GetTechnology() string {
	if x != nil {
		return x.Technology
	}
	return ""
}

func (x *Settings) GetFirewall() bool {
	if x != nil {
		return x.Firewall
	}
	return false
}

func (x *Settings) GetKillSwitch() bool {
	if x != nil {
		return x.KillSwitch
	}
	return false
}

func (x *Settings) GetAutoConnect() bool {
	if x != nil {
		return x.AutoConnect
	}
	return false
}

func (x *Settings) GetNotify() bool {
	if x != nil {
		return x.Notify
	}
	return false
}

func (x *Settings) GetIpv6() bool {
	if x != nil {
		return x.Ipv6
	}
	return false
}

type StatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State      string         `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Technology TechnologyEnum `protobuf:"varint,2,opt,name=technology,proto3,enum=pb.TechnologyEnum" json:"technology,omitempty"`
	Protocol   ProtocolEnum   `protobuf:"varint,3,opt,name=protocol,proto3,enum=pb.ProtocolEnum" json:"protocol,omitempty"`
	Ip         string         `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
	Hostname   string         `protobuf:"bytes,5,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Country    string         `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	City       string         `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`
	Download   int64          `protobuf:"varint,8,opt,name=download,proto3" json:"download,omitempty"`
	Upload     int64          `protobuf:"varint,9,opt,name=upload,proto3" json:"upload,omitempty"`
	Uptime     int64          `protobuf:"varint,10,opt,name=uptime,proto3" json:"uptime,omitempty"` // nanoseconds
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{39}
}

func (x *StatusResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *StatusResponse) GetTechnology() TechnologyEnum {
	if x != nil {
		return x.Technology
	}
	return TechnologyEnum_UNKNOWN_TECHNOLOGY
}

func (x *StatusResponse) GetProtocol() ProtocolEnum {
	if x != nil {
		return x.Protocol
	}
	return ProtocolEnum_UNKNOWN_PROTOCOL
}

func (x *StatusResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *StatusResponse) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *StatusResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *StatusResponse) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *StatusResponse) GetDownload() int64 {
	if x != nil {
		return x.Download
	}
	return 0
}

func (x *StatusResponse) GetUpload() int64 {
	if x != nil {
		return x.Upload
	}
	return 0
}

func (x *StatusResponse) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

type SetAutoConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerTag   string       `protobuf:"bytes,1,opt,name=serverTag,proto3" json:"serverTag,omitempty"`
	Protocol    ProtocolEnum `protobuf:"varint,2,opt,name=protocol,proto3,enum=pb.ProtocolEnum" json:"protocol,omitempty"`
	CyberSec    bool         `protobuf:"varint,3,opt,name=cyberSec,proto3" json:"cyberSec,omitempty"`
	Obfuscate   bool         `protobuf:"varint,4,opt,name=obfuscate,proto3" json:"obfuscate,omitempty"`
	AutoConnect bool         `protobuf:"varint,5,opt,name=autoConnect,proto3" json:"autoConnect,omitempty"`
	Dns         bool         `protobuf:"varint,6,opt,name=dns,proto3" json:"dns,omitempty"`
	Whitelist   *Whitelist   `protobuf:"bytes,7,opt,name=whitelist,proto3" json:"whitelist,omitempty"`
}

func (x *SetAutoConnectRequest) Reset() {
	*x = SetAutoConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_daemon_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAutoConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAutoConnectRequest) ProtoMessage() {}

func (x *SetAutoConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_daemon_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAutoConnectRequest.ProtoReflect.Descriptor instead.
func (*SetAutoConnectRequest) Descriptor() ([]byte, []int) {
	return file_pb_daemon_proto_rawDescGZIP(), []int{40}
}

func (x *SetAutoConnectRequest) GetServerTag() string {
	if x != nil {
		return x.ServerTag
	}
	return ""
}

func (x *SetAutoConnectRequest) GetProtocol() ProtocolEnum {
	if x != nil {
		return x.Protocol
	}
	return ProtocolEnum_UNKNOWN_PROTOCOL
}

func (x *SetAutoConnectRequest) GetCyberSec() bool {
	if x != nil {
		return x.CyberSec
	}
	return false
}

func (x *SetAutoConnectRequest) GetObfuscate() bool {
	if x != nil {
		return x.Obfuscate
	}
	return false
}

func (x *SetAutoConnectRequest) GetAutoConnect() bool {
	if x != nil {
		return x.AutoConnect
	}
	return false
}

func (x *SetAutoConnectRequest) GetDns() bool {
	if x != nil {
		return x.Dns
	}
	return false
}

func (x *SetAutoConnectRequest) GetWhitelist() *Whitelist {
	if x != nil {
		return x.Whitelist
	}
	return nil
}

var File_pb_daemon_proto protoreflect.FileDescriptor

var file_pb_daemon_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x62, 0x2f, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a,
	0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x22, 0x4c, 0x0a, 0x12, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x69,
	0x65, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22,
	0x75, 0x0a, 0x0d, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x62, 0x66, 0x75, 0x73, 0x63, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x6f, 0x62, 0x66, 0x75, 0x73, 0x63, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x3a, 0x0a, 0x0e, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x22, 0x39, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a,
	0x10, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x66, 0x75, 0x73, 0x63, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x6f, 0x62, 0x66, 0x75, 0x73, 0x63, 0x61, 0x74, 0x65, 0x22, 0x3d, 0x0a,
	0x11, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x39, 0x0a, 0x0f,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4e, 0x0a, 0x19, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x12, 0x49, 0x73, 0x4c, 0x6f, 0x67,
	0x67, 0x65, 0x64, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x22, 0x1c, 0x0a,
	0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x07, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x46,
	0x0a, 0x09, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x05, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x22, 0x2b, 0x0a, 0x05, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x64, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x75, 0x64,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x63, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03,
	0x74, 0x63, 0x70, 0x22, 0xa6, 0x02, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x54, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x54, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x66, 0x75, 0x73, 0x63, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x62, 0x66, 0x75, 0x73, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x79, 0x62, 0x65, 0x72, 0x53, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x63, 0x79, 0x62, 0x65, 0x72, 0x53, 0x65, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x6b, 0x69,
	0x6c, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x64, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2e, 0x0a, 0x12,
	0x6e, 0x6f, 0x72, 0x64, 0x4c, 0x79, 0x6e, 0x78, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x6f, 0x72, 0x64, 0x4c, 0x79,
	0x6e, 0x78, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x31, 0x0a, 0x07,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x64, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x54, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x54, 0x61, 0x67, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5b, 0x0a, 0x0d, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x66,
	0x75, 0x73, 0x63, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x62,
	0x66, 0x75, 0x73, 0x63, 0x61, 0x74, 0x65, 0x22, 0x3a, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x27, 0x0a, 0x13, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0x32, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x28,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1f, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x6f,
	0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6c, 0x0a, 0x04, 0x50, 0x6c, 0x61,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x2f, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0x2f, 0x0a, 0x15, 0x52, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x43, 0x0a, 0x0f, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x2d,
	0x0a, 0x11, 0x53, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x30, 0x0a,
	0x12, 0x53, 0x65, 0x74, 0x43, 0x79, 0x62, 0x65, 0x72, 0x53, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x79, 0x62, 0x65, 0x72, 0x53, 0x65, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x79, 0x62, 0x65, 0x72, 0x53, 0x65, 0x63, 0x22,
	0x3d, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x44, 0x4e, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x64, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x64,
	0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x79, 0x62, 0x65, 0x72, 0x53, 0x65, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x79, 0x62, 0x65, 0x72, 0x53, 0x65, 0x63, 0x22, 0x30,
	0x0a, 0x14, 0x53, 0x65, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x22, 0x3c, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x42,
	0x0a, 0x12, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x22, 0x4a, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x74, 0x65,
	0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x0a, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x22, 0x42,
	0x0a, 0x13, 0x53, 0x65, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x3a, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb4,
	0x01, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66,
	0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6b, 0x69, 0x6c, 0x6c, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6b, 0x69, 0x6c,
	0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x75,
	0x74, 0x6f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x69, 0x70, 0x76, 0x36, 0x22, 0xae, 0x02, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x32,
	0x0a, 0x0a, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x74, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xfe, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x41, 0x75,
	0x74, 0x6f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x61, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x61, 0x67, 0x12, 0x2c,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x79, 0x62, 0x65, 0x72, 0x53, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x63, 0x79, 0x62, 0x65, 0x72, 0x53, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x62, 0x66, 0x75,
	0x73, 0x63, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x62, 0x66,
	0x75, 0x73, 0x63, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x75, 0x74,
	0x6f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6e, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x64, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x09, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x2a, 0x43, 0x0a, 0x0e, 0x54, 0x65, 0x63, 0x68, 0x6e,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x54, 0x45, 0x43, 0x48, 0x4e, 0x4f, 0x4c, 0x4f, 0x47, 0x59, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x50, 0x45, 0x4e, 0x56, 0x50, 0x4e, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x4e, 0x4f, 0x52, 0x44, 0x4c, 0x59, 0x4e, 0x58, 0x10, 0x02, 0x2a, 0x36, 0x0a, 0x0c,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x10,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x44, 0x50, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x54,
	0x43, 0x50, 0x10, 0x02, 0x2a, 0x2b, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10,
	0x01, 0x32, 0xec, 0x0e, 0x0a, 0x06, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0b,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x06, 0x43, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3a, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x32, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x11, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x31, 0x0a, 0x06, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x11, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0a, 0x49, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64,
	0x49, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x49, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x41, 0x75, 0x74, 0x68,
	0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x13, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x06, 0x4c, 0x6f, 0x67,
	0x6f, 0x75, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x05, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x04, 0x50,
	0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0e, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0x00, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0x00, 0x12, 0x3a, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b,
	0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x00, 0x12, 0x3f, 0x0a,
	0x0b, 0x53, 0x65, 0x74, 0x43, 0x79, 0x62, 0x65, 0x72, 0x53, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x79, 0x62, 0x65, 0x72, 0x53, 0x65, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3f,
	0x0a, 0x0b, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x2a, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x44, 0x6e, 0x73, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x74, 0x44, 0x4e, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0b, 0x53,
	0x65, 0x74, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x07, 0x53,
	0x65, 0x74, 0x49, 0x70, 0x76, 0x36, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0d,
	0x53, 0x65, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x30, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x4f, 0x62, 0x66, 0x75, 0x73, 0x63,
	0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0b, 0x53, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x00, 0x12,
	0x38, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0c, 0x53, 0x65, 0x74,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x74, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x08,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48,
	0x0a, 0x14, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f,
	0x6c, 0x6f, 0x67, 0x69, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16,
	0x2e, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x20, 0x5a, 0x1e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x64, 0x61, 0x6d, 0x64, 0x62, 0x35, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x6e, 0x6f, 0x72, 0x64, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_daemon_proto_rawDescOnce sync.Once
	file_pb_daemon_proto_rawDescData = file_pb_daemon_proto_rawDesc
)

func file_pb_daemon_proto_rawDescGZIP() []byte {
	file_pb_daemon_proto_rawDescOnce.Do(func() {
		file_pb_daemon_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_daemon_proto_rawDescData)
	})
	return file_pb_daemon_proto_rawDescData
}

var file_pb_daemon_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_pb_daemon_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_pb_daemon_proto_goTypes = []interface{}{
	(TechnologyEnum)(0),               // 0: pb.TechnologyEnum
	(ProtocolEnum)(0),                 // 1: pb.ProtocolEnum
	(AccountTypeEnum)(0),              // 2: pb.AccountTypeEnum
	(*ProtocolsResponse)(nil),         // 3: pb.ProtocolsResponse
	(*TechnologyResponse)(nil),        // 4: pb.TechnologyResponse
	(*AccountResponse)(nil),           // 5: pb.AccountResponse
	(*CitiesRequest)(nil),             // 6: pb.CitiesRequest
	(*CitiesResponse)(nil),            // 7: pb.CitiesResponse
	(*ConnectResponse)(nil),           // 8: pb.ConnectResponse
	(*CountriesRequest)(nil),          // 9: pb.CountriesRequest
	(*CountriesResponse)(nil),         // 10: pb.CountriesResponse
	(*FrontendCountry)(nil),           // 11: pb.FrontendCountry
	(*FrontendCountriesResponse)(nil), // 12: pb.FrontendCountriesResponse
	(*IsLoggedInResponse)(nil),        // 13: pb.IsLoggedInResponse
	(*Bool)(nil),                      // 14: pb.Bool
	(*Payload)(nil),                   // 15: pb.Payload
	(*Whitelist)(nil),                 // 16: pb.Whitelist
	(*Ports)(nil),                     // 17: pb.Ports
	(*ConnectRequest)(nil),            // 18: pb.ConnectRequest
	(*Country)(nil),                   // 19: pb.Country
	(*ServersListRequest)(nil),        // 20: pb.ServersListRequest
	(*DisconnectRequest)(nil),         // 21: pb.DisconnectRequest
	(*GroupsRequest)(nil),             // 22: pb.GroupsRequest
	(*GroupsResponse)(nil),            // 23: pb.GroupsResponse
	(*LoginRequest)(nil),              // 24: pb.LoginRequest
	(*LoginOAuth2Response)(nil),       // 25: pb.LoginOAuth2Response
	(*String)(nil),                    // 26: pb.String
	(*LogoutRequest)(nil),             // 27: pb.LogoutRequest
	(*Plan)(nil),                      // 28: pb.Plan
	(*PlansResponse)(nil),             // 29: pb.PlansResponse
	(*RateConnectionRequest)(nil),     // 30: pb.RateConnectionRequest
	(*RegisterRequest)(nil),           // 31: pb.RegisterRequest
	(*SetGenericRequest)(nil),         // 32: pb.SetGenericRequest
	(*SetCyberSecRequest)(nil),        // 33: pb.SetCyberSecRequest
	(*SetDNSRequest)(nil),             // 34: pb.SetDNSRequest
	(*SetKillSwitchRequest)(nil),      // 35: pb.SetKillSwitchRequest
	(*SetNotifyRequest)(nil),          // 36: pb.SetNotifyRequest
	(*SetProtocolRequest)(nil),        // 37: pb.SetProtocolRequest
	(*SetTechnologyRequest)(nil),      // 38: pb.SetTechnologyRequest
	(*SetWhitelistRequest)(nil),       // 39: pb.SetWhitelistRequest
	(*SettingsResponse)(nil),          // 40: pb.SettingsResponse
	(*Settings)(nil),                  // 41: pb.Settings
	(*StatusResponse)(nil),            // 42: pb.StatusResponse
	(*SetAutoConnectRequest)(nil),     // 43: pb.SetAutoConnectRequest
	(*anypb.Any)(nil),                 // 44: google.protobuf.Any
	(*emptypb.Empty)(nil),             // 45: google.protobuf.Empty
}
var file_pb_daemon_proto_depIdxs = []int32{
	2,  // 0: pb.AccountResponse.type:type_name -> pb.AccountTypeEnum
	1,  // 1: pb.CitiesRequest.protocol:type_name -> pb.ProtocolEnum
	1,  // 2: pb.CountriesRequest.protocol:type_name -> pb.ProtocolEnum
	11, // 3: pb.FrontendCountriesResponse.countries:type_name -> pb.FrontendCountry
	17, // 4: pb.Whitelist.ports:type_name -> pb.Ports
	1,  // 5: pb.GroupsRequest.protocol:type_name -> pb.ProtocolEnum
	44, // 6: pb.String.data:type_name -> google.protobuf.Any
	28, // 7: pb.PlansResponse.plans:type_name -> pb.Plan
	1,  // 8: pb.SetProtocolRequest.protocol:type_name -> pb.ProtocolEnum
	0,  // 9: pb.SetTechnologyRequest.technology:type_name -> pb.TechnologyEnum
	16, // 10: pb.SetWhitelistRequest.whitelist:type_name -> pb.Whitelist
	0,  // 11: pb.StatusResponse.technology:type_name -> pb.TechnologyEnum
	1,  // 12: pb.StatusResponse.protocol:type_name -> pb.ProtocolEnum
	1,  // 13: pb.SetAutoConnectRequest.protocol:type_name -> pb.ProtocolEnum
	16, // 14: pb.SetAutoConnectRequest.whitelist:type_name -> pb.Whitelist
	45, // 15: pb.Daemon.AccountInfo:input_type -> google.protobuf.Empty
	6,  // 16: pb.Daemon.Cities:input_type -> pb.CitiesRequest
	18, // 17: pb.Daemon.Connect:input_type -> pb.ConnectRequest
	9,  // 18: pb.Daemon.Countries:input_type -> pb.CountriesRequest
	21, // 19: pb.Daemon.Disconnect:input_type -> pb.DisconnectRequest
	9,  // 20: pb.Daemon.FrontendCountries:input_type -> pb.CountriesRequest
	22, // 21: pb.Daemon.Groups:input_type -> pb.GroupsRequest
	45, // 22: pb.Daemon.IsLoggedIn:input_type -> google.protobuf.Empty
	24, // 23: pb.Daemon.Login:input_type -> pb.LoginRequest
	45, // 24: pb.Daemon.LoginOAuth2:input_type -> google.protobuf.Empty
	45, // 25: pb.Daemon.LoginOAuth2Callback:input_type -> google.protobuf.Empty
	45, // 26: pb.Daemon.Logout:input_type -> google.protobuf.Empty
	45, // 27: pb.Daemon.Plans:input_type -> google.protobuf.Empty
	45, // 28: pb.Daemon.Ping:input_type -> google.protobuf.Empty
	30, // 29: pb.Daemon.RateConnection:input_type -> pb.RateConnectionRequest
	31, // 30: pb.Daemon.Register:input_type -> pb.RegisterRequest
	43, // 31: pb.Daemon.SetAutoConnect:input_type -> pb.SetAutoConnectRequest
	33, // 32: pb.Daemon.SetCyberSec:input_type -> pb.SetCyberSecRequest
	45, // 33: pb.Daemon.SetDefaults:input_type -> google.protobuf.Empty
	34, // 34: pb.Daemon.SetDns:input_type -> pb.SetDNSRequest
	32, // 35: pb.Daemon.SetFirewall:input_type -> pb.SetGenericRequest
	32, // 36: pb.Daemon.SetIpv6:input_type -> pb.SetGenericRequest
	35, // 37: pb.Daemon.SetKillSwitch:input_type -> pb.SetKillSwitchRequest
	36, // 38: pb.Daemon.SetNotify:input_type -> pb.SetNotifyRequest
	32, // 39: pb.Daemon.SetObfuscate:input_type -> pb.SetGenericRequest
	37, // 40: pb.Daemon.SetProtocol:input_type -> pb.SetProtocolRequest
	38, // 41: pb.Daemon.SetTechnology:input_type -> pb.SetTechnologyRequest
	39, // 42: pb.Daemon.SetWhitelist:input_type -> pb.SetWhitelistRequest
	45, // 43: pb.Daemon.Settings:input_type -> google.protobuf.Empty
	45, // 44: pb.Daemon.SettingsProtocols:input_type -> google.protobuf.Empty
	45, // 45: pb.Daemon.SettingsTechnologies:input_type -> google.protobuf.Empty
	45, // 46: pb.Daemon.Status:input_type -> google.protobuf.Empty
	5,  // 47: pb.Daemon.AccountInfo:output_type -> pb.AccountResponse
	7,  // 48: pb.Daemon.Cities:output_type -> pb.CitiesResponse
	8,  // 49: pb.Daemon.Connect:output_type -> pb.ConnectResponse
	10, // 50: pb.Daemon.Countries:output_type -> pb.CountriesResponse
	15, // 51: pb.Daemon.Disconnect:output_type -> pb.Payload
	12, // 52: pb.Daemon.FrontendCountries:output_type -> pb.FrontendCountriesResponse
	23, // 53: pb.Daemon.Groups:output_type -> pb.GroupsResponse
	13, // 54: pb.Daemon.IsLoggedIn:output_type -> pb.IsLoggedInResponse
	45, // 55: pb.Daemon.Login:output_type -> google.protobuf.Empty
	25, // 56: pb.Daemon.LoginOAuth2:output_type -> pb.LoginOAuth2Response
	15, // 57: pb.Daemon.LoginOAuth2Callback:output_type -> pb.Payload
	45, // 58: pb.Daemon.Logout:output_type -> google.protobuf.Empty
	29, // 59: pb.Daemon.Plans:output_type -> pb.PlansResponse
	45, // 60: pb.Daemon.Ping:output_type -> google.protobuf.Empty
	15, // 61: pb.Daemon.RateConnection:output_type -> pb.Payload
	15, // 62: pb.Daemon.Register:output_type -> pb.Payload
	15, // 63: pb.Daemon.SetAutoConnect:output_type -> pb.Payload
	45, // 64: pb.Daemon.SetCyberSec:output_type -> google.protobuf.Empty
	45, // 65: pb.Daemon.SetDefaults:output_type -> google.protobuf.Empty
	15, // 66: pb.Daemon.SetDns:output_type -> pb.Payload
	45, // 67: pb.Daemon.SetFirewall:output_type -> google.protobuf.Empty
	15, // 68: pb.Daemon.SetIpv6:output_type -> pb.Payload
	45, // 69: pb.Daemon.SetKillSwitch:output_type -> google.protobuf.Empty
	15, // 70: pb.Daemon.SetNotify:output_type -> pb.Payload
	15, // 71: pb.Daemon.SetObfuscate:output_type -> pb.Payload
	15, // 72: pb.Daemon.SetProtocol:output_type -> pb.Payload
	15, // 73: pb.Daemon.SetTechnology:output_type -> pb.Payload
	45, // 74: pb.Daemon.SetWhitelist:output_type -> google.protobuf.Empty
	40, // 75: pb.Daemon.Settings:output_type -> pb.SettingsResponse
	3,  // 76: pb.Daemon.SettingsProtocols:output_type -> pb.ProtocolsResponse
	4,  // 77: pb.Daemon.SettingsTechnologies:output_type -> pb.TechnologyResponse
	42, // 78: pb.Daemon.Status:output_type -> pb.StatusResponse
	47, // [47:79] is the sub-list for method output_type
	15, // [15:47] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_pb_daemon_proto_init() }
func file_pb_daemon_proto_init() {
	if File_pb_daemon_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_daemon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtocolsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TechnologyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendCountry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendCountriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsLoggedInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Whitelist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ports); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Country); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServersListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginOAuth2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*String); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Plan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RateConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGenericRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCyberSecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDNSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetKillSwitchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNotifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProtocolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTechnologyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Settings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_daemon_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAutoConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_daemon_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_daemon_proto_goTypes,
		DependencyIndexes: file_pb_daemon_proto_depIdxs,
		EnumInfos:         file_pb_daemon_proto_enumTypes,
		MessageInfos:      file_pb_daemon_proto_msgTypes,
	}.Build()
	File_pb_daemon_proto = out.File
	file_pb_daemon_proto_rawDesc = nil
	file_pb_daemon_proto_goTypes = nil
	file_pb_daemon_proto_depIdxs = nil
}
